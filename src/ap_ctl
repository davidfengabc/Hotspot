#!/bin/bash


# broadcasting interface
BROADCAST="wlan0"

# receiving interface broadcast is connected to
RECEIVE="ppp0"
if [ $# -eq 2 ]; then 
 RECEIVE=$2;
 echo rcv interface $RECEIVE;
fi

if [[ $1 == "-0" || $1 == "--start" ]]
 then

 echo wan interface $RECEIVE
 echo lan interface $BROADCAST

 ## start hostapd
 echo "Starting hostapd"
 echo "    You can view the log at /var/log/hostapd.log"

 # launch hostapd daemon
 hostapd -d /etc/hostapd/hostapd.conf > /var/log/hostapd.log &

 ## start dhcp server
 echo "Starting dnsmasq"

 # set IP address
 ifconfig $BROADCAST 192.168.199.1
 sleep 2

 # launch dhcpd3 daemon
 # echo "INTERFACES=$BROADCAST" > /etc/default/dhcp
 # dhcpd3 $BROADCAST &
 dnsmasq

 echo "Create iptable rules"
 # create iptables rules
 #iptables -A FORWARD -i $RECEIVE -o $BROADCAST -s 192.168.199.1/24 -m conntrack --ctstate NEW -j ACCEPT
 #iptables -A FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
 #iptables -A POSTROUTING -t nat -j MASQUERADE

 #---------------------------------------------------------------
 # Allow masquerading
 #---------------------------------------------------------------
  
 iptables -A POSTROUTING -t nat -o $RECEIVE -s 192.168.199.0/24 \
          -j MASQUERADE

 #---------------------------------------------------------------
 # Prior to masquerading, the packets are routed via the filter
 # table's FORWARD chain.
 # Allowed outbound: New, established and related connections
 # Allowed inbound : Established and related connections
 #---------------------------------------------------------------
  
 iptables -A FORWARD -t filter -o $RECEIVE -m state \
          --state NEW,ESTABLISHED,RELATED -j ACCEPT
  
 iptables -A FORWARD -t filter -i $RECEIVE -m state \
          --state ESTABLISHED,RELATED -j ACCEPT

 echo "End Create iptable rules"

 # set kernel variable(s)
 #echo 1 > /proc/sys/net/ipv4/conf/all/forwarding
 sysctl -w net.ipv4.conf.all.forwarding=1
 sysctl -w net.ipv4.conf.default.forwarding=1

 # edit kernel configuration
 #cp /etc/sysctl.conf /etc/sysctl.conf.ap_ctl
 #echo "net.ipv4.conf.default.forwarding=1" >> /etc/sysctl.conf
 #echo "net.ipv4.conf.all.forwarding=1" >> /etc/sysctl.conf

 # restart networking
 #/etc/init.d/networking restart
elif [[ $1 == "-1" || $1 == "--stop" ]]
 then
 # send signal 2 to hostapd and dhcpd3
 killall -2 hostapd  dnsmasq

 # remove iptables rules
 iptables -F
 iptables -t nat -F

 # set kernel variable(s)
 sysctl -w net.ipv4.conf.all.forwarding=0
 sysctl -w net.ipv4.conf.default.forwarding=0

 # restart networking
 /etc/init.d/networking restart
 
 sleep 2
elif [[ $1 == "-2" || $1 == "--ics" ]]
 then
 # create iptables rules
 iptables -A FORWARD -i $RECEIVE -o $BROADCAST -s 192.168.199.1/24 -m conntrack --ctstate NEW -j ACCEPT
 iptables -A FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
 iptables -A POSTROUTING -t nat -j MASQUERADE

 # set kernel variable(s)
# echo 1 > /proc/sys/net/ipv4/conf/all/forwarding
 sysctl -w net.ipv4.conf.all.forwarding=1
 sysctl -w net.ipv4.conf.default.forwarding=1

 # edit kernel configuration
# cp /etc/sysctl.conf /etc/sysctl.conf.ap_ctl
# echo "net.ipv4.conf.default.forwarding=1" >> /etc/sysctl.conf
# echo "net.ipv4.conf.all.forwarding=1" >> /etc/sysctl.conf

 # restart networking
 /etc/init.d/networking restart

elif [[ $1 == "-3" || $1 == "--noics" ]]
 then
 # remove iptables rules
 iptables -F
 iptables -t nat -F
 

 # set kernel variable(s)
 echo 0 > /proc/sys/net/ipv4/conf/all/forwarding

 # revert kernel configuration
 mv -i /etc/sysctl.conf.ap_ctl /etc/sysctl.conf

 # restart networking
 /etc/init.d/networking restart

else
 echo $0
 echo "A tool to manage hostapd and dhcpd3"
 echo "Usage:"
 echo "    -0 --start    Start hostapd and dhcpd3"
 echo "    -1 --stop    Stop hostapd and dhcpd3 with signal 2"
 echo "    -2 --ics    Activate internet connection sharing"
 echo "            between specified interfaces"
 echo "    -3 --noics    Undo internet connection sharing settings"
fi

exit 0
